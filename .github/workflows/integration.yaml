#
# this is the integration workflow that is triggered by a push to the develop branches
#
# it will
# - build the project
# - test the project
# - gather the workflow artifacts
#
name: 'integration'

on:
  # run on all branches
  push:
    branches:
      - '**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  # write-all is too much, but we need to write to packages
  # see https://github.com/orgs/community/discussions/57724 for more info
  contents: read
  packages: write
  attestations: write
  id-token: write

jobs:
  devcontainer:
    uses: ./.github/workflows/build-devcontainer-image.yaml
    secrets: inherit

  test:
    runs-on: ubuntu-latest
    needs:
      - devcontainer
    steps:
      - name: checkout branch from git
        uses: actions/checkout@v4

      # - name: display output name
      #   run: echo "image_name=${{ needs.build_devcontainer_image.outputs.image_name }}"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: './.github/shared/actions/devcontainer-shell-run'
        name: build_project
        with:
          runCmd: |
            pnpm install --frozen-lockfile
            pnpm build

      - uses: './.github/shared/actions/devcontainer-shell-run'
        name: test_project
        with:
          runCmd: |
            BUILD_UP_TO_DATE=1 pnpm test

      - uses: './.github/shared/actions/devcontainer-shell-run'
        id: gather_workflow_artifacts
        name: gather_workflow_artifacts
        with:
          runCmd: |
            pnpm exec ./scripts/_get-workflow-artefacts.sh

      - name: attach workflow artifacts
        uses: actions/upload-artifact@v4
        with:
          # see https://github.com/actions/upload-artifact/issues/424
          path: |-
            ${{ steps.gather_workflow_artifacts.outputs.runCmdOutput }}

      # - name: print build directories
      #   run: |
      #     cat <<EOF
      #       stdout was=
      #       ${{ steps.gather_workflow_artifacts.outputs.runCmdOutput }}
      #     EOF

  # # automatically approve and merge dependabot PRs
  # dependabot:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - test
  #   permissions:
  #     pull-requests: write
  #     contents: write
  #   if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
  #   steps:
  #     - id: metadata
  #       uses: dependabot/fetch-metadata@v2
  #       with:
  #         github-token: '${{ secrets.GITHUB_TOKEN }}'
  #     - run: |
  #         gh pr review --approve "$PR_URL"
  #         gh pr merge --squash --auto "$PR_URL"
  #       env:
  #         PR_URL: ${{github.event.pull_request.html_url}}
  #         GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
