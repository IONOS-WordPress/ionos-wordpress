<?php

namespace ionos\essentials\dashboard\blocks\vulnerability;

use ionos\essentials\dashboard\Silent_Skin;
use const ionos\essentials\PLUGIN_DIR;

require_once ABSPATH . 'wp-admin/includes/plugin.php';
require_once ABSPATH . 'wp-admin/includes/class-wp-upgrader.php';
require_once ABSPATH . 'wp-admin/includes/plugin-install.php';
require_once ABSPATH . 'wp-admin/includes/file.php';
require_once ABSPATH . 'wp-admin/includes/misc.php';

\add_action('rest_api_init', function () {
  \register_rest_route(
    'ionos/essentials/dashboard/vulnerability/v1',
    '/install-security',
    [
      'methods'             => 'GET',
      'permission_callback' => function () {
        return \current_user_can('install_plugins');
      },
      'callback'            => function () {
        $plugin_slug = 'ionos-security/ionos-security.php';
        if (! file_exists(WP_PLUGIN_DIR . '/' . $plugin_slug)) {
          if (! install_plugin_from_url(
            'https://web-hosting.s3-eu-central-1.ionoscloud.com/ionos-group/ionos-security.latest.zip'
          )) {
            return new \WP_REST_Response([
              'status' => 'error',
            ], 500);
          }
        }
        \activate_plugin($plugin_slug, '', false, true);

        return new \WP_REST_Response([
          'status' => 'success',
        ], 200);
      },
    ]
  );
});

function install_plugin_from_url($plugin_url)
{
  require_once PLUGIN_DIR . '/inc/dashboard/class-silent-skin.php';

  $skin     = new Silent_Skin();
  $upgrader = new \Plugin_Upgrader($skin);
  $result   = $upgrader->install($plugin_url);

  return ! is_wp_error($result);
}
