<?php

namespace ionos\essentials\dashboard\blocks\vulnerability;

use Ionos\Security\Controllers\WPScan;

// Only for testing purposes
if (defined('IONOS_WP_ENV_MODE') && IONOS_WP_ENV_MODE === 'test' && ! class_exists(
  'Ionos\Security\Controllers\WPScan'
)) {
  require_once __DIR__ . '/class-wpscan.php';
  \update_option(WPScan::AUTH_TOKEN_OPTION, 'test_data');
}

if (class_exists('Ionos\Security\Controllers\WPScan')) {
  if (\get_option(WPScan::AUTH_TOKEN_OPTION, false)) {
    render_security_block();
  } else {
    render_security_block_no_token();
  }
} else {
  render_security_block_install_plugin();
}

function render_security_block(): void
{
  $wpscan = WPScan::get_instance();
  $args   = $wpscan->dashboard_widget_content(0);

  printf('<div class="wp-block-column vulnerability-block %s">', \esc_attr($args['css_class']));

  echo '<h3 class="wp-block-heading">' . esc_html__(
    'Scan for WordPress specific threats and vulnerabilities',
    'ionos-essentials'
  ) . '</h3>';

  printf(
    '<div class="wp-block-group %s content" style="padding-top:0;padding-right:0;padding-bottom:0;padding-left:0">',
    \esc_attr($args['css_class'])
  );
  printf(
    '<div class="wp-block-group %s issue-rows" style="padding-top:0;padding-right:0;padding-bottom:0;padding-left:0">',
    \esc_attr($args['css_class'])
  );
  if (0 < $args['high']) {
    echo '<div class="issue-row high">';
    printf('<p class="dot">%s</p>', \esc_html($args['high']));
    printf(
      '<p>%s</p>',
      \esc_html(_n('critical issue found', 'critical issues found', $args['high'], 'ionos-essentials'))
    );
    echo '</div>';
  }
  if (0 < $args['medium']) {
    echo '<div class="issue-row medium">';
    printf('<p class="dot">%s</p>', \esc_html($args['medium']));
    printf('<p>%s</p>', \esc_html(_n('warning found', 'warnings found', $args['medium'], 'ionos-essentials')));
    echo '</div>';
  }

  if (0 === $args['high'] && 0 === $args['medium']) {
    echo '<div class="issue-row none">';
    printf('<p class="dot">%s</p>', \esc_html('0'));
    printf('<p>%s</p>', \esc_html__('Issues found', 'ionos-essentials'));
    echo '</div>';
  }

  echo '<p class="last-scan">';
  echo \esc_html__('Last scan', 'ionos-essentials');
  echo ': ';
  printf(
    // translators: %s is replaced with the time since the last scan
    \esc_html__('%s ago', 'ionos-essentials'),
    \esc_attr($args['last_scan'])
  );
  echo '</p>
    </div>';
  printf(
    '<figure class="wp-block-image is-resized %s" style="margin:0"><img style="aspect-ratio:1;object-fit:cover;width:96px" src="%s.svg" alt="%s"/></figure>',
    \esc_attr($args['css_class']),
    \esc_attr($args['img_url']) . \esc_attr($args['css_class']),
    \esc_attr($args['css_class'])
  );
  echo '</div>
  <div class="wp-block-buttons">
    <div class="wp-block-button">';
  printf(
    '<a class="wp-block-button__link wp-element-button" href="%s" target="_top">%s</a>',
    \esc_attr($args['report_url']),
    \esc_html__('Show full scan report', 'ionos-essentials')
  );
  echo '</div>
  </div>
</div>
';
}

function render_security_block_install_plugin(): void
{
  printf('<div class="wp-block-column vulnerability-block">');

  echo '<h3 class="wp-block-heading">' . esc_html__(
    'Scan for WordPress specific threats and vulnerabilities',
    'ionos-essentials'
  ) . '</h3>';

  printf(
    '<p style="margin-bottom: 30px">%s</p>',
    \esc_html__('The required Security plugin is missing.', 'ionos-essentials')
  );

  printf(
    '<div class="wp-block-button"><button id="ionos_essentials_install_security" class="wp-block-button__link wp-element-button">%s</button></div>',
    \esc_html__('Install Security plugin', 'ionos-essentials')
  );

  echo '</div>';

  echo '<script>
  document.querySelector("#ionos_essentials_install_security").addEventListener("click", function(event) {
    event.target.disabled = true;
    event.target.innerText = "' . \esc_js(__('Installing...', 'ionos-essentials')) . '";

    fetch("' . get_rest_url( null, '/ionos/essentials/dashboard/vulnerability/v1/install-security' ) . '", {
      method: "GET",
      credentials: "include",
      headers: {
        "Content-Type": "application/json",
        "X-WP-Nonce": "' . \wp_create_nonce('wp_rest') . '"
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.status === "success") {
        location.reload();
      } else {
        console.error("Failed to install the Security plugin.");
      }
    })
    .catch(error => console.error("Error:", error));
  });
  </script>';
}

function render_security_block_no_token(): void
{
  printf('<div class="wp-block-column vulnerability-block">');

  echo '<h3 class="wp-block-heading">' . esc_html__(
    'Scan for WordPress specific threats and vulnerabilities',
    'ionos-essentials'
  ) . '</h3>';

  printf(
    '<p style="margin-bottom: 30px">%s</p>',
    \esc_html__('Vulnerability Scan not possible. Please contact Customer Care.', 'ionos-essentials')
  );

  echo '</div>';
}
