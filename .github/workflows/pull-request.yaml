#
# this is the release workflow that is triggered by a pull requests to the main branch
#
# it will react to
# - created pull requests
# - pull request reviews
# - pull_request_review_comments
#
name: 'pull-request'

on:
  - pull_request_target
  - pull_request_review
  - pull_request_review_comment

jobs:
  send_notification:
    runs-on: ubuntu-latest
    name: Send message to gchat
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Dump GitHub context
        env:
          CONTEXT: ${{ toJson(github) }}
          JOB_CONTEXT: ${{ toJson(job) }}
          STEPS_CONTEXT: ${{ toJson(steps) }}
          RUNNER_CONTEXT: ${{ toJson(runner) }}
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: |
          echo "####### 'github'"
          echo $CONTEXT"
          echo "####### 'job'"
          echo "$JOB_CONTEXT"
          echo "####### 'steps'"
          echo "$STEPS_CONTEXT"
          echo "####### 'runner'"
          echo "$RUNNER_CONTEXT"
          echo "####### 'strategy'"
          echo "$STRATEGY_CONTEXT"
          echo "####### 'matrix'"
          echo "$MATRIX_CONTEXT"
          echo "####### environment"
          env | grep GITHUB
      - name: Send google chat message
        if: ${{ always() }} # Use always to ensure that the notification is also send on failure of former steps
        run: |
          curl -X POST \
            -H 'Content-Type: application/json' \
            -d "{\"text\": \"initial message\", \"threadKey\" : \"${{ github.payload.repository.name }}-${{ github.context.ref }}\"}" \
            "${GOOGLECHAT_PIPELINE_ANNOUNCEMENTS_WEBHOOK}"

          curl -X POST \
            -H 'Content-Type: application/json' \
            -d "{\"text\": \"threaded message\", \"threadKey\" : \"${{ github.payload.repository.name }}-${{ github.context.ref }}\"}" \
            "${GOOGLECHAT_PIPELINE_ANNOUNCEMENTS_WEBHOOK}/"

          curl -X POST \
            -H 'Content-Type: application/json' \
            -d "{\"text\": \"follow up message\", \"threadKey\" : \"${{ github.payload.repository.name }}-${{ github.context.ref }}\"}" \
            "${GOOGLECHAT_PIPELINE_ANNOUNCEMENTS_WEBHOOK}"
