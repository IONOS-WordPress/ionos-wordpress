#
# this workflow is triggered by pull requests and will notify a google chat room about pull request events
#
# this workflow requires a secret "GCHAT_PR_ANNOUNCEMENTS_WEBHOOK" to point to the google chat room
# if not declared his workflow will set a warning and will exit gracefully (=> without an error)
#
# TODO: we cannot react to single review comments in github pipelines as of now
#   See "Add events for pull request review comment resolved/unresolved" https://github.com/orgs/community/discussions/12811
#
name: 'gchat-notify-pull-request'

on:
  pull_request:
    types:
      - opened
      - closed
      - reopened
      - converted_to_draft
      - ready_for_review
      - review_requested
      - review_request_removed
      - edited
  pull_request_review:
    types:
      - submitted
      - edited
      - dismissed
  pull_request_review_comment:
    types:
      - created
  issue_comment:
    types:
      - created

jobs:
  send_notification:
    runs-on: ubuntu-latest
    name: Send message to gchat
    steps:
      - name: Dump GitHub context
        env:
          CONTEXT: ${{ toJson(github) }}
          JOB_CONTEXT: ${{ toJson(job) }}
          STEPS_CONTEXT: ${{ toJson(steps) }}
          RUNNER_CONTEXT: ${{ toJson(runner) }}
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: |
          cat << EOF
          ####### 'github' #######
          echo $CONTEXT"
          ####### 'job' #######
          $JOB_CONTEXT"
          ###### 'steps' #######
          $STEPS_CONTEXT
          ###### 'runner' #######
          $RUNNER_CONTEXT"
          ###### 'strategy' #######
          $STRATEGY_CONTEXT"
          ###### 'matrix' #######
          $MATRIX_CONTEXT"
          ###### environment #######
          $(env | grep GITHUB)
          EOF
      - id: gchat_url
        run: |
          if [[ -z "${{ secrets.GCHAT_PR_ANNOUNCEMENTS_WEBHOOK }}" ]]; then
            echo "::warning::skip sending google chat pull request message : secret GCHAT_PR_ANNOUNCEMENTS_WEBHOOK is not defined"
          else
            # compute google chat url
            THREAD_KEY=$(echo '${{ github.event.pull_request.number || github.event.issue.number }}' | jq -sRr @uri)
            echo "GCHAT_URL=${{ secrets.GCHAT_PR_ANNOUNCEMENTS_WEBHOOK }}&messageReplyOption=REPLY_MESSAGE_FALLBACK_TO_NEW_THREAD&thread_key=$THREAD_KEY" \
              >> $GITHUB_OUTPUT
          fi
      - name: send pr open/close/edit message
        if: ${{ github.event_name == 'pull_request' && steps.gchat_url.outputs.GCHAT_URL }}
        run: |
          TEXT=$(cat -s <<'X!X' | jq -Rsr @json
          ${{ github.triggering_actor}} ${{ github.event.action}} pull request *'${{ github.event.pull_request.title }} ${{ github.event.pull_request.draft && '(draft)' || '' }}'*

          ${{ (github.event.action=='opened' || github.event.action=='edited') && github.event.pull_request.body || '' }}

          ${{ github.event.action=='opened' && github.event.pull_request._links.html.href || ''}}
          X!X
          )
          curl -X POST \
            -H 'Content-Type: application/json' \
            -d "{\"text\": $TEXT }" \
            '${{ steps.gchat_url.outputs.GCHAT_URL }}'

      - name: send pr review
        # this step will send a message if a review comment is made on a pull request review
        if: ${{ github.event_name == 'pull_request_review' && steps.gchat_url.outputs.GCHAT_URL }}
        run: |
          TEXT=$(cat -s <<'X!X' | jq -Rsr @json
          ${{ github.triggering_actor }} ${{ github.event.action }} a review action

          ${{ github.event.review.state }}
          X!X
          )
          curl -X POST \
            -H 'Content-Type: application/json' \
            -d "{\"text\": $TEXT }" \
            '${{ steps.gchat_url.outputs.GCHAT_URL }}'

      - name: send pr review comment
        # this step will send a message if a comment is made on a pull request review
        if: ${{ github.event_name == 'pull_request_review_comment' && steps.gchat_url.outputs.GCHAT_URL }}
        run: |
          TEXT=$(cat -s <<'X!X' | jq -Rsr @json
          ${{ github.triggering_actor }} ${{github.event.action }} a review comment
          X!X
          )
          curl -X POST \
            -H 'Content-Type: application/json' \
            -d "{\"text\": $TEXT }" \
            '${{ steps.gchat_url.outputs.GCHAT_URL }}'

      - name: send pr comment message
        # this step will send a message if a comment is made on a pull request review
        if: ${{ github.event_name == 'issue_comment' && github.event.issue.pull_request && steps.gchat_url.outputs.GCHAT_URL }}
        run: |
          TEXT=$(cat -s <<'X!X' | jq -Rsr @json
          ${{ github.triggering_actor }} ${{ github.event.action }} a pr comment
          X!X
          )
          curl -X POST \
            -H 'Content-Type: application/json' \
            -d "{\"text\": $TEXT }" \
            '${{ steps.gchat_url.outputs.GCHAT_URL }}'
